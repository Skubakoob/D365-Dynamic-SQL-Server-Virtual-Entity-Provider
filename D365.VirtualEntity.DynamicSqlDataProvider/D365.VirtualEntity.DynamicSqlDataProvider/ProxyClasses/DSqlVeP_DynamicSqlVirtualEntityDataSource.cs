#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace D365.VirtualEntity.DynamicSqlDataProvider.ProxyClasses
{


	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("dsqlvep_dynamicsqlvirtualentitydatasource")]
	public partial class DSqlVeP_DynamicSqlVirtualEntityDataSource : Microsoft.Xrm.Sdk.Entity
	{
		[System.Runtime.Serialization.DataContractAttribute()]
		public enum DSqlVeP_DynamicSqlVirtualEntityDataSource_DSqlVeP_ConnectionType
		{

			[System.Runtime.Serialization.EnumMemberAttribute()]
			[OptionSetMetadataAttribute("AAD Connection", 1, "#0000ff")]
			AADConnection = 588970001,

			[System.Runtime.Serialization.EnumMemberAttribute()]
			[OptionSetMetadataAttribute("SQL Connection", 0, "#0000ff")]
			SQLConnection = 588970000,
		}
		/// <summary>
		/// Available fields, a the time of codegen, for the dsqlvep_dynamicsqlvirtualentitydatasource entity
		/// </summary>
		public partial class Fields
		{
			public const string dsqlvep_azureadclientid = "dsqlvep_azureadclientid";
			public const string dsqlvep_azureadclientsecret = "dsqlvep_azureadclientsecret";
			public const string dsqlvep_azureadtenantid = "dsqlvep_azureadtenantid";
			public const string dsqlvep_connectionstring = "dsqlvep_connectionstring";
			public const string dsqlvep_connectiontype = "dsqlvep_connectiontype";
			public const string dsqlvep_connectiontypeName = "dsqlvep_connectiontypename";
			public const string dsqlvep_databasename = "dsqlvep_databasename";
			public const string dsqlvep_dynamicsqlvirtualentitydatasourceId = "dsqlvep_dynamicsqlvirtualentitydatasourceid";
			public const string Id = "dsqlvep_dynamicsqlvirtualentitydatasourceid";
			public const string dsqlvep_enablecreate = "dsqlvep_enablecreate";
			public const string dsqlvep_enablecreateName = "dsqlvep_enablecreatename";
			public const string dsqlvep_enabledelete = "dsqlvep_enabledelete";
			public const string dsqlvep_enabledeleteName = "dsqlvep_enabledeletename";
			public const string dsqlvep_enableupdate = "dsqlvep_enableupdate";
			public const string dsqlvep_enableupdateName = "dsqlvep_enableupdatename";
			public const string dsqlvep_name = "dsqlvep_name";
			public const string dsqlvep_ownersecurityattributename = "dsqlvep_ownersecurityattributename";
			public const string dsqlvep_retrievelinkdata = "dsqlvep_retrievelinkdata";
			public const string dsqlvep_retrievelinkdataName = "dsqlvep_retrievelinkdataname";
			public const string dsqlvep_servername = "dsqlvep_servername";
		}

		[System.Diagnostics.DebuggerNonUserCode()]
		public DSqlVeP_DynamicSqlVirtualEntityDataSource(System.Guid id) :
				base(EntityLogicalName, id)
		{
		}

		[System.Diagnostics.DebuggerNonUserCode()]
		public DSqlVeP_DynamicSqlVirtualEntityDataSource(string keyName, object keyValue) :
				base(EntityLogicalName, keyName, keyValue)
		{
		}

		[System.Diagnostics.DebuggerNonUserCode()]
		public DSqlVeP_DynamicSqlVirtualEntityDataSource(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
				base(EntityLogicalName, keyAttributes)
		{
		}

		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public DSqlVeP_DynamicSqlVirtualEntityDataSource() :
				base(EntityLogicalName)
		{
		}

		public const string PrimaryIdAttribute = "dsqlvep_dynamicsqlvirtualentitydatasourceid";

		public const string PrimaryNameAttribute = "dsqlvep_name";

		public const string EntitySchemaName = "dsqlvep_dynamicsqlvirtualentitydatasource";

		public const string EntityLogicalName = "dsqlvep_dynamicsqlvirtualentitydatasource";

		public const string EntityLogicalCollectionName = "dsqlvep_dynamicsqlvirtualentitydatasources";

		public const string EntitySetName = "dsqlvep_dynamicsqlvirtualentitydatasources";

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_azureadclientid")]
		public string dsqlvep_azureadclientid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_azureadclientid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_azureadclientid", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_azureadclientsecret")]
		public string dsqlvep_azureadclientsecret
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_azureadclientsecret");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_azureadclientsecret", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_azureadtenantid")]
		public string dsqlvep_azureadtenantid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_azureadtenantid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_azureadtenantid", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_connectionstring")]
		public string dsqlvep_connectionstring
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_connectionstring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_connectionstring", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_connectiontype")]
		public virtual DSqlVeP_DynamicSqlVirtualEntityDataSource_DSqlVeP_ConnectionType? dsqlvep_connectiontype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DSqlVeP_DynamicSqlVirtualEntityDataSource_DSqlVeP_ConnectionType?)(EntityOptionSetEnum.GetEnum(this, "dsqlvep_connectiontype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_connectiontype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_connectiontypename")]
		public string dsqlvep_connectiontypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dsqlvep_connectiontype"))
				{
					return this.FormattedValues["dsqlvep_connectiontype"];
				}
				else
				{
					return default(string);
				}
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_databasename")]
		public string dsqlvep_databasename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_databasename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_databasename", value);
			}
		}

		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_dynamicsqlvirtualentitydatasourceid")]
		public System.Nullable<System.Guid> dsqlvep_dynamicsqlvirtualentitydatasourceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("dsqlvep_dynamicsqlvirtualentitydatasourceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_dynamicsqlvirtualentitydatasourceid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_dynamicsqlvirtualentitydatasourceid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.dsqlvep_dynamicsqlvirtualentitydatasourceId = value;
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_enablecreate")]
		public System.Nullable<bool> dsqlvep_enablecreate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dsqlvep_enablecreate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_enablecreate", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_enablecreatename")]
		public string dsqlvep_enablecreateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dsqlvep_enablecreate"))
				{
					return this.FormattedValues["dsqlvep_enablecreate"];
				}
				else
				{
					return default(string);
				}
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_enabledelete")]
		public System.Nullable<bool> dsqlvep_enabledelete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dsqlvep_enabledelete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_enabledelete", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_enabledeletename")]
		public string dsqlvep_enabledeleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dsqlvep_enabledelete"))
				{
					return this.FormattedValues["dsqlvep_enabledelete"];
				}
				else
				{
					return default(string);
				}
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_enableupdate")]
		public System.Nullable<bool> dsqlvep_enableupdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dsqlvep_enableupdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_enableupdate", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_enableupdatename")]
		public string dsqlvep_enableupdateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dsqlvep_enableupdate"))
				{
					return this.FormattedValues["dsqlvep_enableupdate"];
				}
				else
				{
					return default(string);
				}
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_name")]
		public string dsqlvep_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_name", value);
			}
		}

		/// <summary>
		/// If populated, the data will be filtered using D365 security conditions
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_ownersecurityattributename")]
		public string dsqlvep_ownersecurityattributename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_ownersecurityattributename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_ownersecurityattributename", value);
			}
		}

		/// <summary>
		/// The virtual entity provider will retrieve values from query fields belonging to related tables. Set this to false to disable this feature i.e. due to performance issues
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_retrievelinkdata")]
		public System.Nullable<bool> dsqlvep_retrievelinkdata
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dsqlvep_retrievelinkdata");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_retrievelinkdata", value);
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_retrievelinkdataname")]
		public string dsqlvep_retrievelinkdataName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dsqlvep_retrievelinkdata"))
				{
					return this.FormattedValues["dsqlvep_retrievelinkdata"];
				}
				else
				{
					return default(string);
				}
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dsqlvep_servername")]
		public string dsqlvep_servername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dsqlvep_servername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dsqlvep_servername", value);
			}
		}

		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public DSqlVeP_DynamicSqlVirtualEntityDataSource(object anonymousType) :
				this()
		{
			foreach (var p in anonymousType.GetType().GetProperties())
			{
				var value = p.GetValue(anonymousType, null);
				var name = p.Name.ToLower();

				if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
				{
					value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
					name = name.Remove(name.Length - "enum".Length);
				}

				switch (name)
				{
					case "id":
						base.Id = (System.Guid)value;
						Attributes["dsqlvep_dynamicsqlvirtualentitydatasourceid"] = base.Id;
						break;
					case "dsqlvep_dynamicsqlvirtualentitydatasourceid":
						var id = (System.Nullable<System.Guid>)value;
						if (id == null) { continue; }
						base.Id = id.Value;
						Attributes[name] = base.Id;
						break;
					case "formattedvalues":
						// Add Support for FormattedValues
						FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
						break;
					default:
						Attributes[name] = value;
						break;
				}
			}
		}
	}
}
#pragma warning restore CS1591
